{"version":3,"file":"TestUtil.class.js","sourceRoot":"","sources":["../../src/demo/TestUtil.class.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACxB,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAE7B;IAAA;IAMA,CAAC;IAHG,sBAAK,GAAL;QACI,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAChC,CAAC;IACL,aAAC;AAAD,CAAC,AAND,IAMC;AACD,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;AACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AACd,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAElB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;AACpC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAEnB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEpB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEpB,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;AACnB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC;AAChC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAA;AACnC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAA;AAEnC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC1B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC;AAC9B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC;AAE9B,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAA;AAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAElB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACpB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAEhB,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC;AACjC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC;AAG7B,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACrC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC","sourcesContent":["console.log(__filename);        \nconst util = require('util');\n\nclass Person {\n    name: string;\n    age: number;\n    hello() {\n        console.log('hello method');\n    }\n}\nlet p = new Person();\nconsole.log(p)\nlet pStr = util.inspect(p)\nconsole.log(pStr);\n\nlet isArr = util.isArray([1,1,1,1]);\nconsole.log(isArr);\n\nlet isArr1 = util.isArray('123');\nconsole.log(isArr1);\n\nlet isArr2 = util.isArray([]);\nconsole.log(isArr2);\n\nlet d = new Date();\nconsole.log(d); //2018-04-30T04:37:27.116Z\nconsole.log(util.isDate(d));\nconsole.log(d.toLocaleString()); //2018-4-30 12:40:42\nconsole.log(d.toLocaleDateString()) //2018-4-30\nconsole.log(d.toLocaleTimeString()) //12:38:54\n\nconsole.log(d.toString()); //Mon Apr 30 2018 12:40:15 GMT+0800 (CST)\nconsole.log(d.toDateString()); //Mon Apr 30 2018\nconsole.log(d.toTimeString()); //12:39:37 GMT+0800 (CST)\n\nlet year = d.getFullYear()\nconsole.log(year); //2018\n\nlet d1 = Date.now();\nconsole.log(d1); //1525063047116\n\nlet d2 = new Date(1525063047116);\nconsole.log(d2.getMinutes());\n\n////Invalid Date若输入格式有问题 则返回Invalid Date\nlet d3 = new Date('2018-4-30 12:38'); \nconsole.log(d3);\n\n\n\n"]}