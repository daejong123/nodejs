{"version":3,"file":"TestReadfile.class.js","sourceRoot":"","sources":["../../src/demo/TestReadfile.class.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAExB,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACzB,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAE7B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;AAC3B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACxB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAA;AAC/D,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;AAC9D,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACxB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAIvC,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAC,UAAC,GAAG,EAAE,IAAI;IAC7B,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACpB,CAAC;IACD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AACpE,CAAC,CAAC,CAAA;AACF,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAK7B,IAAI,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AACvC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC9C,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAIjC,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE,gBAAgB,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,EAAC,UAAC,GAAG;IAC3D,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;AACL,CAAC,CAAC,CAAC;AAKH,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,eAAe,EAAE,OAAO,EAAE,UAAA,GAAG;IACnD,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;AACL,CAAC,CAAC,CAAA;AAEF,IAAI,KAAK,GAAG,EAAE,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AACnD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;AAI3B,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;AAI5D,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,UAAA,MAAM;IACzB,EAAE,CAAA,CAAC,MAAM,CAAC,CAAC,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IACvB,CAAC;AACL,CAAC,CAAC,CAAA","sourcesContent":["console.log(__filename);\n\nconst fs = require('fs');\nconst path = require('path');\n\nconsole.log(__dirname);\nconsole.log(process.cwd());\nconsole.log(__filename);\nlet hello_path = path.resolve(__dirname, '../assets/hello.txt')\nlet hello_path1 = path.join(__dirname, '../assets/hello.txt');\nconsole.log(hello_path);\nconsole.log(hello_path1);\nconsole.log(fs.existsSync(hello_path));\n\n\n// 异步读文件\nfs.readFile(hello_path,(err, data) => {\n    if(err) {\n        console.log(err)\n    }\n    console.log(\"readFile\" + data.toString());\n    console.log(JSON.parse(data.toString()).compilerOptions.module);\n}) \nconsole.log('readFile是异步的哦');\n\n\n\n// 同步读文件\nlet data = fs.readFileSync(hello_path);\nconsole.log(\"readFileSync\" + data.toString());\nconsole.log(\"readFileSync是同步的哦\");\n\n\n// 异步写文件，通过制定flag=a在内容后面添加内容\nfs.writeFile(hello_path, '\\nadd new data', { 'flag': 'a' },(err)=>{\n    if(err) {\n        console.log(err);\n    }\n});\n\n//writeFileSync\n\n// 异步写写文件 直接添加在文件的后面\nfs.appendFile(hello_path, '\\n i love you', 'utf-8', err=>{\n    if(err) {\n        console.log(err);\n    }\n})\n\nlet data1 = fs.appendFileSync(hello_path, 'china');\nconsole.log(data1 + \"哈哈哈\");\n\n// 也可以使用require模块中的函数 \n// let data = fs.readFileSync(require.resolve('./assets/hello.txt'));\nconsole.log(\"哈哈哈\" + require.resolve('../assets/hello.txt')); \n//如果 resolve 的目标路径不存在, 就会抛出 Cannot find module './hello.txt' 的异常. 省略了一道检查文件是否存在的工序 (fs.exists).\n\n// 异步判断文件是否存在\nfs.exists(hello_path1, exists=>{\n    if(exists) {\n        console.log('路径存在')\n    }\n})\n/**\n * JSON.stringify(js_object) 将js-object转换成JSON对象(key是字符串)：{\"comName\":\"/dev/tty.Bluetooth-Incoming-Port\"}\n * JSON.parse(json_object) 将json-object转换成js-object(key是变量): { comName: '/dev/tty.Bluetooth-Incoming-Port' }\n */\n\n\n /**\n  * readFile\n  * readFileSync\n  * \n  * writeFile\n  * writeFileSync\n  * \n  * appendFile\n  * appendFileSync\n  * \n  * exists判断文件\n  * existsSync\n  * \n  */"]}