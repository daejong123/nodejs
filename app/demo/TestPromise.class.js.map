{"version":3,"file":"TestPromise.class.js","sourceRoot":"","sources":["../../src/demo/TestPromise.class.ts"],"names":[],"mappings":";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AAEvB;IAAA;IAUA,CAAC;IATU,iBAAK,GAAZ,UAAa,IAAY;QACrB,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;QACzB,EAAE,CAAA,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YACnB,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAC,QAAQ,CAAC,CAAC;QACpC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,QAAQ,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzC,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;IAC5B,CAAC;IACL,kBAAC;AAAD,CAAC,AAVD,IAUC;AAVY,kCAAW;AAaxB,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC;KACtB,IAAI,CAAC,UAAA,IAAI,IAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA,CAAA,CAAC,EAAE,UAAA,KAAK,IAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;AAEjE,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC;KACvB,IAAI,CAAC,UAAA,IAAI,IAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA,CAAA,CAAC,EAAE,UAAA,KAAK,IAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;AAEzE,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC;KACtB,IAAI,CAAC,UAAA,KAAK,IAAK,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,EAAE,UAAA,KAAK,IAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA","sourcesContent":["const Q = require('q');\n\nexport class PromiseDemo {\n    static hello(name: string): Q.Promise<string> {  //泛型string表示resolve的参数类型为字符串\n        let deferred = Q.defer();\n        if(name === \"dottie\") {\n            deferred.resolve(name+' nihao');\n        } else {\n            deferred.reject(new Error(\"输入姓名不对\"));\n        }\n        return deferred.promise;\n    }\n}\n\n\nPromiseDemo.hello('dottie')\n    .then(name=>{console.log(name)}, error=>{console.log(error)})\n\nPromiseDemo.hello('dottie1')\n    .then(name=>{console.log(name)}, error=>{console.log(error.message)})\n\nPromiseDemo.hello('dottie')\n    .then(value => {console.log(value)}, error=>{console.log(error)})\n"]}